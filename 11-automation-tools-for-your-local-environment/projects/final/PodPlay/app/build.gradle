apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
  signingConfigs {
    release {
      storeFile file("myreleasekey.keystore")
      storePassword "password"
      keyAlias "MyReleaseKey"
      keyPassword "password"
    }
  }
  compileSdkVersion 31
  buildToolsVersion = '30.0.3'
  defaultConfig {
    applicationId "com.raywenderlich.podplay"
    minSdkVersion 23
    targetSdkVersion 31
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    buildConfigField "boolean", "IS_PRODUCTION", "false"
    signingConfigs.release
  }

  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfigs.release
    }
    qa {
      initWith debug
      applicationIdSuffix ".qaTesting"
      signingConfig signingConfigs.debug
    }
  }
  flavorDimensions "version_type", "store"
  productFlavors {
    free {
      dimension "version_type"
      applicationIdSuffix ".free"
      versionNameSuffix "-free"
    }
    full {
      dimension "version_type"
      applicationIdSuffix ".full"
      versionNameSuffix "-full"
    }
  }

  productFlavors {
    google {
      dimension "store"
      applicationIdSuffix ".google"
      versionNameSuffix "-google"
    }
    amazon {
      dimension "store"
      applicationIdSuffix ".amazon"
      versionNameSuffix "-amazon"
      signingConfig signingConfigs.release
    }
  }

  variantFilter { variant ->
    def names = variant.flavors*.name
    if (names.contains("free") && names.contains("amazon")) {
      setIgnore(true)
    }
  }

  compileOptions {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
  }
  // dynamicFeatures = [':installTimeDeliveryExample', ':onDemandDeliveryExample', ':conditionalDeliveryExample', ':instantModuleExample']
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  implementation "androidx.appcompat:appcompat:$app_compat_version"
  implementation "androidx.core:core-ktx:$core_ktx_version"
  implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
  implementation "com.google.android.material:material:$material_version"
  implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
  implementation "androidx.media:media:$media_version"

  implementation "androidx.fragment:fragment-ktx:$fragment_version"
  implementation "androidx.activity:activity-ktx:$app_compat_version"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

  implementation "androidx.room:room-runtime:$room_version"
  kapt "androidx.room:room-compiler:$room_version"

  implementation "androidx.emoji2:emoji2:$emoji2_version"
  implementation "androidx.emoji2:emoji2-views:$emoji2_version"
  implementation "androidx.emoji2:emoji2-views-helper:$emoji2_version"

  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

  implementation "com.github.bumptech.glide:glide:$glide_version"
  implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

  implementation "androidx.work:work-runtime-ktx:$work_version"

  testImplementation "junit:junit:$junit_version"
  androidTestImplementation "androidx.test.ext:junit:$junit_android_version"
  androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

  implementation "com.google.android.play:core:$google_play_core_version"
  implementation "com.google.android.play:core-ktx:$google_play_core_ktx"
}
